module scene.group;

import scene.base;

extern(C) void fast_group_process(Ray**, Result**, VMState*, int numstates, int len, void* self);

class Group : SceneObject {
  SceneObject[] list;
  string toString() { return "Group<$(list.length)>"; }
  bool collide(Ray* ray, Result* res) { assert(false); }
  void process(VMState[] list) {
    auto len = this.list.length;
    fast_group_process(rayplanes.ptr, resplanes.ptr, list.ptr, list.length, len, void*:CommandHandler:this);
    return;
  }
  CommandHandler[] buildCommandStream(VMStats* stats) {
    CommandHandler[auto~] res;
    res ~= list[0].buildCommandStream(stats);
    for auto obj <- list[1..$] {
      res ~= obj.buildCommandStream(stats);
      res ~= this;
      stats.results-needed-cur --;
    }
    return res[];
  }
}
